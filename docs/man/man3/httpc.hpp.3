.TH "programs/claac/httpc.hpp" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
programs/claac/httpc.hpp
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBfc::variant\fP \fBaacio::client::http::call\fP (const std::string &\fBserver\fP, uint16_t port, const std::string &path, const \fBfc::variant\fP &postdata)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const string \fBaacio::client::http::chain_func_base\fP = '/v1/chain'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_info_func\fP = chain_func_base + '/get_info'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::push_txn_func\fP = chain_func_base + '/push_transaction'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::push_txns_func\fP = chain_func_base + '/push_transactions'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::json_to_bin_func\fP = chain_func_base + '/abi_json_to_bin'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_block_func\fP = chain_func_base + '/get_block'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_account_func\fP = chain_func_base + '/get_account'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_table_func\fP = chain_func_base + '/get_table_rows'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_code_func\fP = chain_func_base + '/get_code'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_currency_balance_func\fP = chain_func_base + '/get_currency_balance'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_currency_stats_func\fP = chain_func_base + '/get_currency_stats'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_required_keys\fP = chain_func_base + '/get_required_keys'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::account_history_func_base\fP = '/v1/account_history'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_transaction_func\fP = account_history_func_base + '/get_transaction'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_transactions_func\fP = account_history_func_base + '/get_transactions'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_key_accounts_func\fP = account_history_func_base + '/get_key_accounts'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::get_controlled_accounts_func\fP = account_history_func_base + '/get_controlled_accounts'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::net_func_base\fP = '/v1/net'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::net_connect\fP = net_func_base + '/connect'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::net_disconnect\fP = net_func_base + '/disconnect'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::net_status\fP = net_func_base + '/status'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::net_connections\fP = net_func_base + '/connections'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_func_base\fP = '/v1/wallet'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_create\fP = wallet_func_base + '/create'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_open\fP = wallet_func_base + '/open'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_list\fP = wallet_func_base + '/list_wallets'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_list_keys\fP = wallet_func_base + '/list_keys'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_public_keys\fP = wallet_func_base + '/get_public_keys'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_lock\fP = wallet_func_base + '/lock'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_lock_all\fP = wallet_func_base + '/lock_all'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_unlock\fP = wallet_func_base + '/unlock'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_import_key\fP = wallet_func_base + '/import_key'"
.br
.ti -1c
.RI "const string \fBaacio::client::http::wallet_sign_trx\fP = wallet_func_base + '/sign_transaction'"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBCopyright:\fP
.RS 4
defined in AcuteAngleChain/LICENSE\&.txt 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
