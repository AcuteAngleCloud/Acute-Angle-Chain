.TH "wasm::FlattenControlFlow" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
wasm::FlattenControlFlow
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBwasm::WalkerPass< PostWalker< FlattenControlFlow > >\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSplitter\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBisFunctionParallel\fP () override"
.br
.ti -1c
.RI "\fBPass\fP * \fBcreate\fP () override"
.br
.ti -1c
.RI "void \fBdoWalkFunction\fP (\fBFunction\fP *\fBfunc\fP)"
.br
.ti -1c
.RI "Index \fBgetBreakTargetIndex\fP (\fBName\fP name, WasmType type, \fBExpression\fP *expr=nullptr, Index index=\-1)"
.br
.ti -1c
.RI "\fBExpression\fP * \fBgetFallthroughReplacement\fP (\fBExpression\fP *child, Index myIndex)"
.br
.ti -1c
.RI "WasmType \fBgetFallthroughType\fP (\fBExpression\fP *child)"
.br
.ti -1c
.RI "void \fBvisitBlock\fP (\fBBlock\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitLoop\fP (\fBLoop\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitIf\fP (\fBIf\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitBreak\fP (\fBBreak\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitSwitch\fP (\fBSwitch\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitCall\fP (\fBCall\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitCallImport\fP (\fBCallImport\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitCallIndirect\fP (\fBCallIndirect\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitSetLocal\fP (\fBSetLocal\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitSetGlobal\fP (\fBSetGlobal\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitLoad\fP (\fBLoad\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitStore\fP (\fBStore\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitUnary\fP (\fBUnary\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitBinary\fP (\fBBinary\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitSelect\fP (\fBSelect\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitDrop\fP (\fBDrop\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitReturn\fP (\fBReturn\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitHost\fP (\fBHost\fP *curr)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::unique_ptr< \fBBuilder\fP > \fBbuilder\fP"
.br
.ti -1c
.RI "\fBstd::map\fP< \fBName\fP, Index > \fBbreakNameIndexes\fP"
.br
.ti -1c
.RI "\fBstd::map\fP< \fBExpression\fP *, Index > \fBbreakExprIndexes\fP"
.br
.in -1c
.SS "Additional Inherited Members"


.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
