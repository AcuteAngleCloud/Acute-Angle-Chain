.TH "fc::bloom_filter" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fc::bloom_filter
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBbloom_filter\fP (const \fBbloom_parameters\fP &p)"
.br
.ti -1c
.RI "\fBbloom_filter\fP (const \fBbloom_filter\fP &filter)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBbloom_filter\fP &f) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBbloom_filter\fP &f) const"
.br
.ti -1c
.RI "\fBbloom_filter\fP & \fBoperator=\fP (const \fBbloom_filter\fP &f)"
.br
.ti -1c
.RI "bool \fBoperator!\fP () const"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "void \fBinsert\fP (const unsigned char *key_begin, const std::size_t &length)"
.br
.ti -1c
.RI "template<typename T > void \fBinsert\fP (const \fBT\fP &t)"
.br
.ti -1c
.RI "void \fBinsert\fP (const std::string &key)"
.br
.ti -1c
.RI "void \fBinsert\fP (const char *data, const std::size_t &length)"
.br
.ti -1c
.RI "template<typename InputIterator > void \fBinsert\fP (const InputIterator begin, const InputIterator end)"
.br
.ti -1c
.RI "virtual bool \fBcontains\fP (const unsigned char *key_begin, const std::size_t length) const"
.br
.ti -1c
.RI "template<typename T > bool \fBcontains\fP (const \fBT\fP &t) const"
.br
.ti -1c
.RI "bool \fBcontains\fP (const std::string &key) const"
.br
.ti -1c
.RI "bool \fBcontains\fP (const char *data, const std::size_t &length) const"
.br
.ti -1c
.RI "template<typename InputIterator > InputIterator \fBcontains_all\fP (const InputIterator begin, const InputIterator end) const"
.br
.ti -1c
.RI "template<typename InputIterator > InputIterator \fBcontains_none\fP (const InputIterator begin, const InputIterator end) const"
.br
.ti -1c
.RI "virtual unsigned long long int \fBsize\fP () const"
.br
.ti -1c
.RI "std::size_t \fBelement_count\fP () const"
.br
.ti -1c
.RI "double \fBeffective_fpp\fP () const"
.br
.ti -1c
.RI "\fBbloom_filter\fP & \fBoperator&=\fP (const \fBbloom_filter\fP &f)"
.br
.ti -1c
.RI "\fBbloom_filter\fP & \fBoperator|=\fP (const \fBbloom_filter\fP &f)"
.br
.ti -1c
.RI "\fBbloom_filter\fP & \fBoperator^=\fP (const \fBbloom_filter\fP &f)"
.br
.ti -1c
.RI "const cell_type * \fBtable\fP () const"
.br
.ti -1c
.RI "std::size_t \fBhash_count\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBstd::vector\fP< bloom_type > \fBsalt_\fP"
.br
.ti -1c
.RI "\fBstd::vector\fP< unsigned char > \fBbit_table_\fP"
.br
.ti -1c
.RI "unsigned int \fBsalt_count_\fP"
.br
.ti -1c
.RI "unsigned long long int \fBtable_size_\fP"
.br
.ti -1c
.RI "unsigned long long int \fBraw_table_size_\fP"
.br
.ti -1c
.RI "unsigned long long int \fBprojected_element_count_\fP"
.br
.ti -1c
.RI "unsigned int \fBinserted_element_count_\fP"
.br
.ti -1c
.RI "unsigned long long int \fBrandom_seed_\fP"
.br
.ti -1c
.RI "double \fBdesired_false_positive_probability_\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef unsigned int \fBbloom_type\fP"
.br
.ti -1c
.RI "typedef unsigned char \fBcell_type\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBcompute_indices\fP (const bloom_type &hash, std::size_t &bit_index, std::size_t &bit) const"
.br
.ti -1c
.RI "void \fBgenerate_unique_salt\fP ()"
.br
.ti -1c
.RI "bloom_type \fBhash_ap\fP (const unsigned char *begin, std::size_t remaining_length, bloom_type hash) const"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
