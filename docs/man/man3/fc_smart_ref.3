.TH "fc::smart_ref< T >" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fc::smart_ref< T > \- Used to forward declare value types and break circular dependencies or use heap allocation\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <smart_ref_fwd\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename U > \fBsmart_ref\fP (\fBU\fP &&u)"
.br
.ti -1c
.RI "template<typename U , typename V > \fBsmart_ref\fP (\fBU\fP &&u, \fBV\fP &&v)"
.br
.ti -1c
.RI "template<typename U , typename V , typename X , typename Y > \fBsmart_ref\fP (\fBU\fP &&u, \fBV\fP &&v, \fBX\fP &&, \fBY\fP &&)"
.br
.ti -1c
.RI "\fBsmart_ref\fP (const \fBsmart_ref\fP &f)"
.br
.ti -1c
.RI "\fBsmart_ref\fP (\fBsmart_ref\fP &&f)"
.br
.ti -1c
.RI "\fBoperator const T &\fP () const"
.br
.ti -1c
.RI "\fBoperator T &\fP ()"
.br
.ti -1c
.RI "\fBT\fP & \fBoperator*\fP ()"
.br
.ti -1c
.RI "const \fBT\fP & \fBoperator*\fP () const"
.br
.ti -1c
.RI "const \fBT\fP * \fBoperator\->\fP () const"
.br
.ti -1c
.RI "\fBT\fP * \fBoperator\->\fP ()"
.br
.ti -1c
.RI "bool \fBoperator!\fP () const"
.br
.ti -1c
.RI "template<typename U > \fBT\fP & \fBoperator=\fP (\fBU\fP &&u)"
.br
.ti -1c
.RI "\fBT\fP & \fBoperator=\fP (\fBsmart_ref\fP &&u)"
.br
.ti -1c
.RI "\fBT\fP & \fBoperator=\fP (const \fBsmart_ref\fP &u)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>
.br
class fc::smart_ref< T >"
Used to forward declare value types and break circular dependencies or use heap allocation\&. 

\fBA\fP smart reference is heap allocated, move-aware, and is gauranteed to never be null (except after a move) 

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
