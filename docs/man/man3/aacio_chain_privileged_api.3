.TH "aacio::chain::privileged_api" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
aacio::chain::privileged_api
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBaacio::chain::context_aware_api\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBprivileged_api\fP (\fBapply_context\fP &ctx)"
.br
.ti -1c
.RI "int \fBis_feature_active\fP (int64_t feature_name)"
.br
.ti -1c
.RI "void \fBactivate_feature\fP (int64_t feature_name)"
.br
.ti -1c
.RI "void \fBset_resource_limits\fP (\fBaccount_name\fP \fBaccount\fP, int64_t ram_bytes, int64_t net_weight, int64_t cpu_weight)"
.br
.ti -1c
.RI "void \fBget_resource_limits\fP (\fBaccount_name\fP \fBaccount\fP, int64_t &ram_bytes, int64_t &net_weight, int64_t &cpu_weight)"
.br
.ti -1c
.RI "void \fBset_active_producers\fP (\fBarray_ptr\fP< char > packed_producer_schedule, size_t datalen)"
.br
.ti -1c
.RI "uint32_t \fBget_blockchain_parameters_packed\fP (\fBarray_ptr\fP< char > packed_blockchain_parameters, size_t datalen)"
.br
.ti -1c
.RI "void \fBset_blockchain_parameters_packed\fP (\fBarray_ptr\fP< char > packed_blockchain_parameters, size_t datalen)"
.br
.ti -1c
.RI "bool \fBis_privileged\fP (\fBaccount_name\fP n) const"
.br
.ti -1c
.RI "void \fBset_privileged\fP (\fBaccount_name\fP n, bool is_priv)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Member Function Documentation"
.PP 
.SS "void aacio::chain::privileged_api::activate_feature (int64_t feature_name)\fC [inline]\fP"
This should schedule the feature to be activated once the block that includes this call is irreversible\&. It should fail if the feature is already pending\&.
.PP
Feature name should be base32 encoded name\&. 
.SS "int aacio::chain::privileged_api::is_feature_active (int64_t feature_name)\fC [inline]\fP"
This should return true if a feature is active and irreversible, false if not\&.
.PP
Irreversiblity by fork-database is not consensus safe, therefore, this defines irreversiblity only by block headers not by BFT short-cut\&. 
.SS "void aacio::chain::privileged_api::set_resource_limits (\fBaccount_name\fP account, int64_t ram_bytes, int64_t net_weight, int64_t cpu_weight)\fC [inline]\fP"
update the resource limits associated with an account\&. Note these new values will not take effect until the next resource 'tick' which is currently defined as a cycle boundary inside a block\&.
.PP
\fBParameters:\fP
.RS 4
\fIaccount\fP - the account whose limits are being modified 
.br
\fIram_bytes\fP - the limit for ram bytes 
.br
\fInet_weight\fP - the weight for determining share of network capacity 
.br
\fIcpu_weight\fP - the weight for determining share of compute capacity 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
