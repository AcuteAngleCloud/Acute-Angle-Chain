.TH "md_programs_snapshot_tools_keys_readme" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md_programs_snapshot_tools_keys_readme \- AAC Genesis \fBKey\fP Utility 

.PP
An offline AAC key utility built with nodejs and Electron\&. This utility does two things:
.PP
.IP "\(bu" 2
Generate a valid AAC keypair
.IP "\(bu" 2
Validate an existing AAC keypair
.PP
.PP
This tool is experimental and downloadable executables are not yet available\&.
.PP
.SS "Status"
.PP
.IP "\(bu" 2
MacOS - Tested, Functional
.IP "\(bu" 2
Windows - Untested
.IP "\(bu" 2
Linux - Untested
.PP
.PP
.SS "Dependencies"
.PP
.IP "\(bu" 2
Nodejs & npm
.PP
.PP
.SS "Building Executables Yourself"
.PP
Clone the repo
.PP
.PP
.nf
git clone https://github\&.com/AACIO/genesis\&.git
.fi
.PP
.PP
Navigate to keys directory
.PP
.PP
.nf
cd genesis/tools/keys
.fi
.PP
.PP
Install dependencies 
.PP
.nf
npm install

.fi
.PP
.PP
\fBMethod one:\fP Launch project with Electron
.PP
.PP
.nf
npm install -g electron
electron \&.
.fi
.PP
.PP
\fBMethod \fBTwo\fP:\fP Compile the project Electron package Manager
.PP
.PP
.nf
npm install -g electron-packager
npm run compile
.fi
.PP
.PP
You'll now find a \fBbuild\fP directory in the project root, where you can find an executable for your system\&.
.PP
.SS "Compile for all Platforms"
.PP
.SS "Building for All Platforms"
.PP
\fBWill only compile for all platforms on a mac\fP
.PP
\fIIf running on a mac, you'll need to install xquartz and wine, easiest is through homebrew\fP
.PP
.PP
.nf
npm run compile-all
.fi
.PP
 
