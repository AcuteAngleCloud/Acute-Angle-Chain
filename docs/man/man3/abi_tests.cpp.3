.TH "tests/tests/abi_tests.cpp" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tests/tests/abi_tests.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <algorithm>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <iterator>\fP
.br
\fC#include <cstdlib>\fP
.br
\fC#include <boost/test/unit_test\&.hpp>\fP
.br
\fC#include <fc/variant\&.hpp>\fP
.br
\fC#include <fc/io/json\&.hpp>\fP
.br
\fC#include <fc/exception/exception\&.hpp>\fP
.br
\fC#include <fc/log/logger\&.hpp>\fP
.br
\fC#include <aacio/chain/contracts/chain_initializer\&.hpp>\fP
.br
\fC#include <aacio/chain/contracts/abi_serializer\&.hpp>\fP
.br
\fC#include <aacio/abi_generator/abi_generator\&.hpp>\fP
.br
\fC#include 'config\&.hpp'\fP
.br
\fC#include <boost/test/framework\&.hpp>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBabi_gen_helper\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBfc::variant\fP \fBverify_byte_round_trip_conversion\fP (const \fBabi_serializer\fP &abis, const \fBtype_name\fP &type, const \fBfc::variant\fP &var)"
.br
.ti -1c
.RI "auto \fBget_resolver\fP (const \fBcontracts::abi_def\fP &abi=\fBcontracts::abi_def\fP())"
.br
.ti -1c
.RI "template<typename T > \fBfc::variant\fP \fBverify_type_round_trip_conversion\fP (const \fBabi_serializer\fP &abis, const \fBtype_name\fP &type, const \fBfc::variant\fP &var)"
.br
.ti -1c
.RI "\fBBOOST_AUTO_TEST_CASE\fP (uint_types)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_unknown_type, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_all_types, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_double_base, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_double_action, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_all_indexes, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_unable_to_determine_index, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_long_field_name, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_long_type_name, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_same_type_different_namespace, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_bad_index_type, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_full_table_decl, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_str_table_decl, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_union_table, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_same_action_different_type, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_template_base, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_action_and_table, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_simple_typedef, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_field_typedef, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_vector_of_POD, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_vector_of_structs, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abigen_vector_multidimension, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abgigen_vector_alias, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abgigen_aacioabi_macro, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_FIXTURE_TEST_CASE\fP (abgigen_contract_inheritance, \fBabi_gen_helper\fP)"
.br
.ti -1c
.RI "\fBBOOST_AUTO_TEST_CASE\fP (general)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char * \fBmy_abi\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBCopyright:\fP
.RS 4
defined in AcuteAngleChain/LICENSE\&.txt 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
