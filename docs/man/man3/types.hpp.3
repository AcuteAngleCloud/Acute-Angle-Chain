.TH "libraries/chain/include/aacio/chain/types.hpp" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libraries/chain/include/aacio/chain/types.hpp
.SH SYNOPSIS
.br
.PP
\fC#include <aacio/chain/name\&.hpp>\fP
.br
\fC#include <chainbase/chainbase\&.hpp>\fP
.br
\fC#include <fc/container/flat_fwd\&.hpp>\fP
.br
\fC#include <fc/io/varint\&.hpp>\fP
.br
\fC#include <fc/io/enum_type\&.hpp>\fP
.br
\fC#include <fc/crypto/sha224\&.hpp>\fP
.br
\fC#include <fc/optional\&.hpp>\fP
.br
\fC#include <fc/safe\&.hpp>\fP
.br
\fC#include <fc/container/flat\&.hpp>\fP
.br
\fC#include <fc/string\&.hpp>\fP
.br
\fC#include <fc/io/raw\&.hpp>\fP
.br
\fC#include <fc/uint128\&.hpp>\fP
.br
\fC#include <fc/static_variant\&.hpp>\fP
.br
\fC#include <fc/smart_ref_fwd\&.hpp>\fP
.br
\fC#include <fc/crypto/ripemd160\&.hpp>\fP
.br
\fC#include <fc/fixed_string\&.hpp>\fP
.br
\fC#include <fc/crypto/private_key\&.hpp>\fP
.br
\fC#include <memory>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <deque>\fP
.br
\fC#include <cstdint>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBaacio::chain::void_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBOBJECT_CTOR1\fP(NAME)"
.br
.ti -1c
.RI "#define \fBOBJECT_CTOR2_MACRO\fP(x,  y,  field)   ,field(a)"
.br
.ti -1c
.RI "#define \fBOBJECT_CTOR2\fP(NAME,  FIELDS)"
.br
.ti -1c
.RI "#define \fBOBJECT_CTOR\fP(\&.\&.\&.)   BOOST_PP_OVERLOAD(OBJECT_CTOR, __VA_ARGS__)(__VA_ARGS__)"
.br
.ti -1c
.RI "#define \fB_V\fP(n,  v)   \fBfc::mutable_variant_object\fP(n, v)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBaacio::chain::public_key_type\fP = \fBfc::crypto::public_key\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::private_key_type\fP = \fBfc::crypto::private_key\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::signature_type\fP = \fBfc::crypto::signature\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::shared_string\fP = boost::interprocess::basic_string< char, std::char_traits< char >, allocator< char > >"
.br
.ti -1c
.RI "template<typename T > using \fBaacio::chain::shared_vector\fP = boost::interprocess::vector< \fBT\fP, allocator< \fBT\fP > >"
.br
.ti -1c
.RI "template<typename T > using \fBaacio::chain::shared_set\fP = boost::interprocess::set< \fBT\fP, std::less< \fBT\fP >, allocator< \fBT\fP > >"
.br
.ti -1c
.RI "using \fBaacio::chain::chain_id_type\fP = \fBfc::sha256\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::action_name\fP = name"
.br
.ti -1c
.RI "using \fBaacio::chain::scope_name\fP = name"
.br
.ti -1c
.RI "using \fBaacio::chain::account_name\fP = name"
.br
.ti -1c
.RI "using \fBaacio::chain::permission_name\fP = name"
.br
.ti -1c
.RI "using \fBaacio::chain::block_id_type\fP = \fBfc::sha256\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::checksum_type\fP = \fBfc::sha256\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::checksum256_type\fP = \fBfc::sha256\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::checksum512_type\fP = \fBfc::sha512\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::checksum160_type\fP = \fBfc::ripemd160\fP"
.br
.ti -1c
.RI "using \fBaacio::chain::transaction_id_type\fP = checksum_type"
.br
.ti -1c
.RI "using \fBaacio::chain::digest_type\fP = checksum_type"
.br
.ti -1c
.RI "using \fBaacio::chain::weight_type\fP = uint16_t"
.br
.ti -1c
.RI "using \fBaacio::chain::block_num_type\fP = uint32_t"
.br
.ti -1c
.RI "using \fBaacio::chain::share_type\fP = int64_t"
.br
.ti -1c
.RI "using \fBaacio::chain::uint128_t\fP = __uint128_t"
.br
.ti -1c
.RI "using \fBaacio::chain::bytes\fP = vector< char >"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBaacio::chain::object_type\fP { \fBnull_object_type\fP, \fBaccount_object_type\fP, \fBpermission_object_type\fP, \fBpermission_usage_object_type\fP, \fBpermission_link_object_type\fP, \fBaction_code_object_type\fP, \fBkey_value_object_type\fP, \fBindex64_object_type\fP, \fBindex128_object_type\fP, \fBindex256_object_type\fP, \fBindex_double_object_type\fP, \fBaction_permission_object_type\fP, \fBglobal_property_object_type\fP, \fBdynamic_global_property_object_type\fP, \fBblock_summary_object_type\fP, \fBtransaction_object_type\fP, \fBgenerated_transaction_object_type\fP, \fBproducer_object_type\fP, \fBchain_property_object_type\fP, \fBaacio::chain::account_control_history_object_type\fP, \fBaacio::chain::account_transaction_history_object_type\fP, \fBaacio::chain::transaction_history_object_type\fP, \fBaacio::chain::public_key_history_object_type\fP, \fBaacio::chain::balance_object_type\fP, \fBaacio::chain::staked_balance_object_type\fP, \fBaacio::chain::producer_votes_object_type\fP, \fBaacio::chain::producer_schedule_object_type\fP, \fBaacio::chain::proxy_vote_object_type\fP, \fBscope_sequence_object_type\fP, \fBtable_id_object_type\fP, \fBresource_limits_object_type\fP, \fBresource_usage_object_type\fP, \fBresource_limits_state_object_type\fP, \fBresource_limits_config_object_type\fP, \fBaacio::chain::OBJECT_TYPE_COUNT\fP }"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBCopyright:\fP
.RS 4
defined in AcuteAngleChain/LICENSE\&.txt 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define OBJECT_CTOR1(NAME)"
\fBValue:\fP
.PP
.nf
NAME() = delete; \
    public: \
    template<typename Constructor, typename Allocator> \
    NAME(Constructor&& c, chainbase::allocator<Allocator>) \
    { c(*this); }
.fi
.SS "#define OBJECT_CTOR2(NAME, FIELDS)"
\fBValue:\fP
.PP
.nf
NAME() = delete; \
    public: \
    template<typename Constructor, typename Allocator> \
    NAME(Constructor&& c, chainbase::allocator<Allocator> a) \
    : id(0) BOOST_PP_SEQ_FOR_EACH(OBJECT_CTOR2_MACRO, _, FIELDS) \
    { c(*this); }
.fi
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBaacio::chain::object_type\fP"
List all object types from all namespaces here so they can be easily reflected and displayed in debug output\&. If a 3rd party wants to extend the core code then they will have to change the packed_object::type field from enum_type to uint16 to avoid warnings when converting packed_objects to/from json\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIaccount_control_history_object_type \fP\fP
Defined by \fBaccount_history_plugin\fP\&. 
.TP
\fB\fIaccount_transaction_history_object_type \fP\fP
Defined by \fBaccount_history_plugin\fP\&. 
.TP
\fB\fItransaction_history_object_type \fP\fP
Defined by \fBaccount_history_plugin\fP\&. 
.TP
\fB\fIpublic_key_history_object_type \fP\fP
Defined by \fBaccount_history_plugin\fP\&. 
.TP
\fB\fIbalance_object_type \fP\fP
Defined by native_contract library\&. 
.TP
\fB\fIstaked_balance_object_type \fP\fP
Defined by native_contract library\&. 
.TP
\fB\fIproducer_votes_object_type \fP\fP
Defined by native_contract library\&. 
.TP
\fB\fIproducer_schedule_object_type \fP\fP
Defined by native_contract library\&. 
.TP
\fB\fIproxy_vote_object_type \fP\fP
Defined by native_contract library\&. 
.TP
\fB\fIOBJECT_TYPE_COUNT \fP\fP
Sentry value which contains the number of different object types\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
