.TH "fc::sha256" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fc::sha256
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBencoder\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsha256\fP (const string &hex_str)"
.br
.ti -1c
.RI "\fBsha256\fP (const char *data, size_t size)"
.br
.ti -1c
.RI "string \fBstr\fP () const"
.br
.ti -1c
.RI "\fBoperator string\fP () const"
.br
.ti -1c
.RI "char * \fBdata\fP () const"
.br
.ti -1c
.RI "size_t \fBdata_size\fP () const"
.br
.ti -1c
.RI "uint32_t \fBpop_count\fP () const"
.br
.ti -1c
.RI "uint16_t \fBclz\fP () const"
.br
.ti -1c
.RI "uint32_t \fBapprox_log_32\fP () const"
.br
.ti -1c
.RI "void \fBset_to_inverse_approx_log_32\fP (uint32_t x)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBsha256\fP \fBhash\fP (const char *d, uint32_t dlen)"
.br
.ti -1c
.RI "static \fBsha256\fP \fBhash\fP (const string &)"
.br
.ti -1c
.RI "static \fBsha256\fP \fBhash\fP (const \fBsha256\fP &)"
.br
.ti -1c
.RI "template<typename T > static \fBsha256\fP \fBhash\fP (const \fBT\fP &t)"
.br
.ti -1c
.RI "static double \fBinverse_approx_log_32_double\fP (uint32_t x)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "uint64_t \fB_hash\fP [4]"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<typename T > \fBT\fP & \fBoperator<<\fP (\fBT\fP &ds, const \fBsha256\fP &ep)"
.br
.ti -1c
.RI "template<typename T > \fBT\fP & \fBoperator>>\fP (\fBT\fP &ds, \fBsha256\fP &ep)"
.br
.ti -1c
.RI "\fBsha256\fP \fBoperator<<\fP (const \fBsha256\fP &h1, uint32_t i)"
.br
.ti -1c
.RI "\fBsha256\fP \fBoperator>>\fP (const \fBsha256\fP &h1, uint32_t i)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBsha256\fP &h1, const \fBsha256\fP &h2)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBsha256\fP &h1, const \fBsha256\fP &h2)"
.br
.ti -1c
.RI "\fBsha256\fP \fBoperator^\fP (const \fBsha256\fP &h1, const \fBsha256\fP &h2)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBsha256\fP &h1, const \fBsha256\fP &h2)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBsha256\fP &h1, const \fBsha256\fP &h2)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBsha256\fP &h1, const \fBsha256\fP &h2)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "uint32_t sha256::approx_log_32 () const"
Approximate (log_2(x) + 1) * 2**24\&.
.PP
Detailed specs:
.IP "\(bu" 2
Return 0 when x == 0\&.
.IP "\(bu" 2
High 8 bits of result simply counts nonzero bits\&.
.IP "\(bu" 2
Low 24 bits of result are the 24 bits of input immediately after the most significant 1 in the input\&.
.IP "\(bu" 2
If above would require reading beyond the end of the input, zeros are used instead\&. 
.PP

.SS "uint16_t sha256::clz () const"
Count leading zero bits 

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
