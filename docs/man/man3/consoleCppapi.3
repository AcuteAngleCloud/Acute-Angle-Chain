.TH "consoleCppapi" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
consoleCppapi \- C++ wrapper for Console \fBC\fP API\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBaacio::iostream\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename Arg , typename\&.\&.\&. Args> void \fBaacio::print\fP (Arg &&a, Args &&\&.\&.\&. args)"
.br
.RI "\fBPrint\fP out value / list of values\&. "
.ti -1c
.RI "template<typename T > \fBiostream\fP & \fBaacio::operator<<\fP (\fBiostream\fP &out, const \fBT\fP &v)"
.br
.RI "Overload c++ iostream\&. "
.in -1c
.SH "Detailed Description"
.PP 
C++ wrapper for Console \fBC\fP API\&. 

This API uses C++ variadic templates and type detection to make it easy to print any native type\&. You can even overload the \fC\fBprint()\fP\fP method for your own custom types\&.
.PP
\fBExample:\fP 
.PP
.nf
print( "hello world, this is a number: ", 5 );

.fi
.PP
.SH "Overriding Print for your Types"
.PP
There are two ways to overload print:
.IP "1." 4
implement void print( const T& )
.IP "2." 4
implement T::print()const 
.PP

.SH "Function Documentation"
.PP 
.SS "template<typename T > \fBiostream\fP& aacio::operator<< (\fBiostream\fP & out, const \fBT\fP & v)\fC [inline]\fP"

.PP
Overload c++ iostream\&. Overload c++ iostream 
.PP
\fBParameters:\fP
.RS 4
\fIout\fP Output strem 
.br
\fIv\fP \fBValue\fP to be printed
.RE
.PP
Example: 
.PP
.nf
const char *s = "Hello World!";
uint64_t unsigned_64_bit_int = 1e+18;
uint128_t unsigned_128_bit_int (87654323456);
uint64_t string_as_unsigned_64_bit = N(abcde);
std::out << s << " " << unsigned_64_bit_int << " "  << unsigned_128_bit_int << " " << string_as_unsigned_64_bit;
// Output: Hello World! 1000000000000000000 87654323456 abcde

.fi
.PP
 
.SS "template<typename Arg , typename\&.\&.\&. Args> void aacio::print (Arg && a, Args &&\&.\&.\&. args)"

.PP
\fBPrint\fP out value / list of values\&. \fBPrint\fP out value / list of values (except double) 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP \fBValue\fP to be printed 
.br
\fIargs\fP Other values to be printed
.RE
.PP
Example: 
.PP
.nf
const char *s = "Hello World!";
uint64_t unsigned_64_bit_int = 1e+18;
uint128_t unsigned_128_bit_int (87654323456);
uint64_t string_as_unsigned_64_bit = N(abcde);
print(s , unsigned_64_bit_int, unsigned_128_bit_int, string_as_unsigned_64_bit);
// Ouput: Hello World!100000000000000000087654323456abcde

.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
