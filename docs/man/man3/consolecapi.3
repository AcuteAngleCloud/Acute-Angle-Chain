.TH "consolecapi" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
consolecapi \- \fBC\fP API to log/print text messages\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBprints\fP (const char *cstr)"
.br
.RI "Prints string\&. "
.ti -1c
.RI "void \fBprints_l\fP (const char *cstr, uint32_t len)"
.br
.RI "Prints string\&. "
.ti -1c
.RI "void \fBprinti\fP (int64_t value)"
.br
.RI "Prints value as a 64 bit unsigned integer\&. "
.ti -1c
.RI "void \fBprintui\fP (uint64_t value)"
.br
.ti -1c
.RI "void \fBprinti128\fP (const uint128_t *value)"
.br
.RI "Prints value as a 128 bit unsigned integer\&. "
.ti -1c
.RI "void \fBprintdf\fP (double value)"
.br
.RI "Prints value as double\&. "
.ti -1c
.RI "void \fBprintff\fP (float value)"
.br
.ti -1c
.RI "void \fBprintdi\fP (int64_t value)"
.br
.ti -1c
.RI "void \fBprintn\fP (uint64_t name)"
.br
.RI "Prints a 64 bit names as base32 encoded string\&. "
.ti -1c
.RI "void \fBprinthex\fP (const void *data, uint32_t datalen)"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBC\fP API to log/print text messages\&. 


.SH "Function Documentation"
.PP 
.SS "void printdf (double value)"

.PP
Prints value as double\&. Prints value as double 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP of double (interpreted as 64 bit unsigned integer) to be printed
.RE
.PP
Example: 
.PP
.nf
double double_value = 5\&.0 / 10\&.0;
printd(*(uint64_t*)(&double_value)); // Output: 0\&.5

.fi
.PP
 
.SS "void printi (int64_t value)"

.PP
Prints value as a 64 bit unsigned integer\&. Prints value as a 64 bit unsigned integer 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP of 64 bit unsigned integer to be printed
.RE
.PP
Example: 
.PP
.nf
printi(1e+18); // Output: 1000000000000000000

.fi
.PP
 
.SS "void printi128 (const uint128_t * value)"

.PP
Prints value as a 128 bit unsigned integer\&. Prints value as a 128 bit unsigned integer 
.PP
\fBParameters:\fP
.RS 4
\fIvalue\fP 128 bit integer to be printed
.RE
.PP
Example: 
.PP
.nf
uint128_t large_int(87654323456);
printi128(large_int); // Output: 87654323456

.fi
.PP
 
.SS "void printn (uint64_t name)"

.PP
Prints a 64 bit names as base32 encoded string\&. Prints a 64 bit names as base32 encoded string 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP - 64 bit name to be printed
.RE
.PP
Example: 
.PP
.nf
printn(N(abcde)); // Output: abcde

.fi
.PP
 
.SS "void prints (const char * cstr)"

.PP
Prints string\&. Prints string 
.PP
\fBParameters:\fP
.RS 4
\fIcstr\fP - a null terminated string
.RE
.PP
Example: 
.PP
.nf
prints("Hello World!"); // Output: Hello World!

.fi
.PP
 
.SS "void prints_l (const char * cstr, uint32_t len)"

.PP
Prints string\&. Prints string up to given length 
.PP
\fBParameters:\fP
.RS 4
\fIcstr\fP - pointer to string 
.br
\fIlen\fP - len of string to be printed
.RE
.PP
Example: 
.PP
.nf
prints_l("Hello World!", 5); // Output: Hello

.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
