.TH "compiler" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
compiler \- Declares int128 helper builtins generated by the toolchain\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fB__multi3\fP (__int128 &res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.RI "Multiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers\&. "
.ti -1c
.RI "void \fB__divti3\fP (__int128 &res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__udivti3\fP (unsigned __int128 &res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__modti3\fP (__int128 &res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__umodti3\fP (unsigned __int128 &res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__lshlti3\fP (__int128 &res, uint64_t lo, uint64_t hi, uint32_t shift)"
.br
.ti -1c
.RI "void \fB__lshrti3\fP (__int128 &res, uint64_t lo, uint64_t hi, uint32_t shift)"
.br
.ti -1c
.RI "void \fB__ashlti3\fP (__int128 &res, uint64_t lo, uint64_t hi, uint32_t shift)"
.br
.ti -1c
.RI "void \fB__ashrti3\fP (__int128 &res, uint64_t lo, uint64_t hi, uint32_t shift)"
.br
.ti -1c
.RI "void \fB__addtf3\fP (long double &ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__subtf3\fP (long double &ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__multf3\fP (long double &ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__divtf3\fP (long double &ret, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__eqtf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__netf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__getf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__gttf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__letf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__lttf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__cmptf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "int \fB__unordtf2\fP (uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"
.br
.ti -1c
.RI "void \fB__extendsftf2\fP (long double &ret, float f)"
.br
.ti -1c
.RI "void \fB__extenddftf2\fP (long double &ret, double f)"
.br
.ti -1c
.RI "int64_t \fB__fixtfdi\fP (uint64_t l, uint64_t h)"
.br
.ti -1c
.RI "int32_t \fB__fixtfsi\fP (uint64_t l, uint64_t h)"
.br
.ti -1c
.RI "uint64_t \fB__fixunstfdi\fP (uint64_t l, uint64_t h)"
.br
.ti -1c
.RI "uint32_t \fB__fixunstfsi\fP (uint64_t l, uint64_t h)"
.br
.ti -1c
.RI "double \fB__trunctfdf2\fP (uint64_t l, uint64_t h)"
.br
.ti -1c
.RI "float \fB__trunctfsf2\fP (uint64_t l, uint64_t h)"
.br
.ti -1c
.RI "void \fB__break_point\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Declares int128 helper builtins generated by the toolchain\&. 


.SH "Function Documentation"
.PP 
.SS "void __multi3 (__int128 & res, uint64_t la, uint64_t ha, uint64_t lb, uint64_t hb)"

.PP
Multiply two 128 unsigned bit integers (which are represented as two 64 bit unsigned integers\&. Multiply two 128 bit integers split as two unsigned 64 bit integers and assign the value to the first parameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIres\fP It will be replaced with the result product\&. 
.br
\fIla\fP Low 64 bits of the first 128 bit factor\&. 
.br
\fIha\fP High 64 bits of the first 128 bit factor\&. 
.br
\fIlb\fP Low 64 bits of the second 128 bit factor\&. 
.br
\fIhb\fP High 64 bits of the second 128 bit factor\&. Example: 
.PP
.nf
__int128 res = 0;
__int128 a = 100;
__int128 b = 100;
__multi3(res, a, (a >> 64), b, (b >> 64));
printi128(res); // Output: 10000

.fi
.PP
 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
