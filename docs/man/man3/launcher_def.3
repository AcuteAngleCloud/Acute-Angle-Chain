.TH "launcher_def" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
launcher_def
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBassign_name\fP (\fBaacd_def\fP &\fBnode\fP, bool is_bios)"
.br
.ti -1c
.RI "void \fBset_options\fP (bpo::options_description &cli)"
.br
.ti -1c
.RI "void \fBinitialize\fP (const variables_map &vmap)"
.br
.ti -1c
.RI "void \fBinit_genesis\fP ()"
.br
.ti -1c
.RI "void \fBload_servers\fP ()"
.br
.ti -1c
.RI "bool \fBgenerate\fP ()"
.br
.ti -1c
.RI "void \fBdefine_network\fP ()"
.br
.ti -1c
.RI "void \fBbind_nodes\fP ()"
.br
.ti -1c
.RI "\fBhost_def\fP * \fBfind_host\fP (const string &name)"
.br
.ti -1c
.RI "\fBhost_def\fP * \fBfind_host_by_name_or_address\fP (const string &name)"
.br
.ti -1c
.RI "\fBhost_def\fP * \fBdeploy_config_files\fP (\fBtn_node_def\fP &\fBnode\fP)"
.br
.ti -1c
.RI "string \fBcompose_scp_command\fP (const \fBhost_def\fP &host, const bfs::path &\fBsource\fP, const bfs::path &destination)"
.br
.ti -1c
.RI "void \fBwrite_config_file\fP (\fBtn_node_def\fP &\fBnode\fP)"
.br
.ti -1c
.RI "void \fBwrite_logging_config_file\fP (\fBtn_node_def\fP &\fBnode\fP)"
.br
.ti -1c
.RI "void \fBwrite_genesis_file\fP (\fBtn_node_def\fP &\fBnode\fP)"
.br
.ti -1c
.RI "void \fBwrite_setprods_file\fP ()"
.br
.ti -1c
.RI "void \fBwrite_bios_boot\fP ()"
.br
.ti -1c
.RI "bool \fBis_bios_ndx\fP (size_t ndx)"
.br
.ti -1c
.RI "size_t \fBstart_ndx\fP ()"
.br
.ti -1c
.RI "bool \fBnext_ndx\fP (size_t &ndx)"
.br
.ti -1c
.RI "size_t \fBskip_ndx\fP (size_t from, size_t offset)"
.br
.ti -1c
.RI "void \fBmake_ring\fP ()"
.br
.ti -1c
.RI "void \fBmake_star\fP ()"
.br
.ti -1c
.RI "void \fBmake_mesh\fP ()"
.br
.ti -1c
.RI "void \fBmake_custom\fP ()"
.br
.ti -1c
.RI "void \fBwrite_dot_file\fP ()"
.br
.ti -1c
.RI "void \fBformat_ssh\fP (const string &cmd, const string &host_name, string &ssh_cmd_line)"
.br
.ti -1c
.RI "bool \fBdo_ssh\fP (const string &cmd, const string &host_name)"
.br
.ti -1c
.RI "void \fBprep_remote_config_dir\fP (\fBaacd_def\fP &\fBnode\fP, \fBhost_def\fP *host)"
.br
.ti -1c
.RI "void \fBlaunch\fP (\fBaacd_def\fP &\fBnode\fP, string &gts)"
.br
.ti -1c
.RI "void \fBkill\fP (launch_modes mode, string sig_opt)"
.br
.ti -1c
.RI "\fBpair\fP< \fBhost_def\fP, \fBaacd_def\fP > \fBfind_node\fP (uint16_t node_num)"
.br
.ti -1c
.RI "\fBvector\fP< \fBpair\fP< \fBhost_def\fP, \fBaacd_def\fP > > \fBget_nodes\fP (const string &node_number_list)"
.br
.ti -1c
.RI "void \fBbounce\fP (const string &node_numbers)"
.br
.ti -1c
.RI "void \fBdown\fP (const string &node_numbers)"
.br
.ti -1c
.RI "void \fBroll\fP (const string &host_names)"
.br
.ti -1c
.RI "void \fBstart_all\fP (string &gts, launch_modes mode)"
.br
.ti -1c
.RI "void \fBignite\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBforce_overwrite\fP"
.br
.ti -1c
.RI "size_t \fBtotal_nodes\fP"
.br
.ti -1c
.RI "size_t \fBprod_nodes\fP"
.br
.ti -1c
.RI "size_t \fBproducers\fP"
.br
.ti -1c
.RI "size_t \fBnext_node\fP"
.br
.ti -1c
.RI "string \fBshape\fP"
.br
.ti -1c
.RI "allowed_connection \fBallowed_connections\fP = PC_NONE"
.br
.ti -1c
.RI "bfs::path \fBgenesis\fP"
.br
.ti -1c
.RI "bfs::path \fBoutput\fP"
.br
.ti -1c
.RI "bfs::path \fBhost_map_file\fP"
.br
.ti -1c
.RI "bfs::path \fBserver_ident_file\fP"
.br
.ti -1c
.RI "bfs::path \fBstage\fP"
.br
.ti -1c
.RI "string \fBerd\fP"
.br
.ti -1c
.RI "bfs::path \fBconfig_dir_base\fP"
.br
.ti -1c
.RI "bfs::path \fBdata_dir_base\fP"
.br
.ti -1c
.RI "bool \fBskip_transaction_signatures\fP = false"
.br
.ti -1c
.RI "string \fBaacd_extra_args\fP"
.br
.ti -1c
.RI "\fBtestnet_def\fP \fBnetwork\fP"
.br
.ti -1c
.RI "string \fBgelf_endpoint\fP"
.br
.ti -1c
.RI "\fBvector\fP< string > \fBaliases\fP"
.br
.ti -1c
.RI "\fBvector\fP< \fBhost_def\fP > \fBbindings\fP"
.br
.ti -1c
.RI "int \fBper_host\fP = 0"
.br
.ti -1c
.RI "\fBlast_run_def\fP \fBlast_run\fP"
.br
.ti -1c
.RI "int \fBstart_delay\fP = 0"
.br
.ti -1c
.RI "bool \fBgelf_enabled\fP"
.br
.ti -1c
.RI "bool \fBnogen\fP"
.br
.ti -1c
.RI "bool \fBboot\fP"
.br
.ti -1c
.RI "bool \fBadd_enable_stale_production\fP = false"
.br
.ti -1c
.RI "string \fBlaunch_name\fP"
.br
.ti -1c
.RI "string \fBlaunch_time\fP"
.br
.ti -1c
.RI "\fBserver_identities\fP \fBservers\fP"
.br
.ti -1c
.RI "\fBproducer_set_def\fP \fBproducer_set\fP"
.br
.ti -1c
.RI "\fBvector\fP< string > \fBgenesis_block\fP"
.br
.ti -1c
.RI "string \fBstart_temp\fP"
.br
.ti -1c
.RI "string \fBstart_script\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
