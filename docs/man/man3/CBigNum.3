.TH "CBigNum" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CBigNum
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCBigNum\fP (const \fBCBigNum\fP &b)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator=\fP (const \fBCBigNum\fP &b)"
.br
.ti -1c
.RI "\fBCBigNum\fP (signed char n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (short n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (int n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (int64_t n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (unsigned char n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (unsigned short n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (unsigned int n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (uint64_t n)"
.br
.ti -1c
.RI "\fBCBigNum\fP (const \fBstd::vector\fP< unsigned char > &vch)"
.br
.ti -1c
.RI "void \fBsetulong\fP (unsigned long n)"
.br
.ti -1c
.RI "unsigned long \fBgetulong\fP () const"
.br
.ti -1c
.RI "unsigned int \fBgetuint\fP () const"
.br
.ti -1c
.RI "int \fBgetint\fP () const"
.br
.ti -1c
.RI "void \fBsetint64\fP (int64_t n)"
.br
.ti -1c
.RI "void \fBsetuint64\fP (uint64_t n)"
.br
.ti -1c
.RI "void \fBsetvch\fP (const \fBstd::vector\fP< unsigned char > &vch)"
.br
.ti -1c
.RI "\fBstd::vector\fP< unsigned char > \fBgetvch\fP () const"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBSetCompact\fP (unsigned int nCompact)"
.br
.ti -1c
.RI "unsigned int \fBGetCompact\fP () const"
.br
.ti -1c
.RI "void \fBSetHex\fP (const std::string &str)"
.br
.ti -1c
.RI "std::string \fBToString\fP (int nBase=10) const"
.br
.ti -1c
.RI "std::string \fBGetHex\fP () const"
.br
.ti -1c
.RI "bool \fBoperator!\fP () const"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator+=\fP (const \fBCBigNum\fP &b)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator\-=\fP (const \fBCBigNum\fP &b)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator*=\fP (const \fBCBigNum\fP &b)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator/=\fP (const \fBCBigNum\fP &b)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator%=\fP (const \fBCBigNum\fP &b)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator<<=\fP (unsigned int shift)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator>>=\fP (unsigned int shift)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "const \fBCBigNum\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBCBigNum\fP & \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "const \fBCBigNum\fP \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "const BIGNUM * \fBto_bignum\fP () const"
.br
.ti -1c
.RI "BIGNUM * \fBto_bignum\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
C++ wrapper for BIGNUM (OpenSSL bignum) 

.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
