.TH "fc::uint128" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fc::uint128 \- an implementation of 128 bit unsigned integer  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <uint128\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBuint128\fP (uint32_t l)"
.br
.ti -1c
.RI "\fBuint128\fP (int32_t l)"
.br
.ti -1c
.RI "\fBuint128\fP (int64_t l)"
.br
.ti -1c
.RI "\fBuint128\fP (uint64_t l)"
.br
.ti -1c
.RI "\fBuint128\fP (const std::string &s)"
.br
.ti -1c
.RI "\fBuint128\fP (uint64_t _h, uint64_t _l)"
.br
.ti -1c
.RI "\fBuint128\fP (const \fBfc::bigint\fP &bi)"
.br
.ti -1c
.RI "\fBuint128\fP (unsigned __int128 i)"
.br
.ti -1c
.RI "\fBoperator std::string\fP () const"
.br
.ti -1c
.RI "\fBoperator fc::bigint\fP () const"
.br
.ti -1c
.RI "\fBoperator unsigned __int128\fP () const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBuint128\fP &o) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBuint128\fP &o) const"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBuint128\fP &o) const"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const int64_t &o) const"
.br
.ti -1c
.RI "bool \fBoperator!\fP () const"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator\-\fP () const"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator~\fP () const"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator\-\-\fP ()"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator\-\-\fP (int)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator|=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator&=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator^=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator<<=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator>>=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator+=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator\-=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator*=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator/=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "\fBuint128\fP & \fBoperator%=\fP (const \fBuint128\fP &u)"
.br
.ti -1c
.RI "uint32_t \fBto_integer\fP () const"
.br
.ti -1c
.RI "uint64_t \fBto_uint64\fP () const"
.br
.ti -1c
.RI "uint32_t \fBlow_32_bits\fP () const"
.br
.ti -1c
.RI "uint64_t \fBlow_bits\fP () const"
.br
.ti -1c
.RI "uint64_t \fBhigh_bits\fP () const"
.br
.ti -1c
.RI "uint8_t \fBpopcount\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBuint128\fP \fBmax_value\fP ()"
.br
.ti -1c
.RI "static void \fBfull_product\fP (const \fBuint128\fP &a, const \fBuint128\fP &b, \fBuint128\fP &result_hi, \fBuint128\fP &result_lo)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "uint64_t \fBhi\fP"
.br
.ti -1c
.RI "uint64_t \fBlo\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBuint128\fP \fBoperator+\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator\-\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator*\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator/\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator%\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator|\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator&\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator^\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator<<\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "\fBuint128\fP \fBoperator>>\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBuint128\fP &l, const int64_t &r)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const int64_t &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBuint128\fP &l, const int64_t &r)"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const int64_t &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBuint128\fP &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBuint128\fP &l, const int64_t &r)"
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const int64_t &l, const \fBuint128\fP &r)"
.br
.ti -1c
.RI "std::size_t \fBhash_value\fP (const \fBuint128\fP &v)"
.br
.in -1c
.SH "Detailed Description"
.PP 
an implementation of 128 bit unsigned integer 

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
