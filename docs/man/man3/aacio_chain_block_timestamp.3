.TH "aacio::chain::block_timestamp< IntervalMs, EpochMs >" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
aacio::chain::block_timestamp< IntervalMs, EpochMs >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <block_timestamp\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBblock_timestamp\fP (uint32_t s=0)"
.br
.ti -1c
.RI "\fBblock_timestamp\fP (const \fBfc::time_point\fP &t)"
.br
.ti -1c
.RI "\fBblock_timestamp\fP (const \fBfc::time_point_sec\fP &t)"
.br
.ti -1c
.RI "\fBoperator fc::time_point\fP () const"
.br
.ti -1c
.RI "void \fBoperator=\fP (const \fBfc::time_point\fP &t)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBblock_timestamp\fP &t) const"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBblock_timestamp\fP &t) const"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBblock_timestamp\fP &t) const"
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBblock_timestamp\fP &t) const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBblock_timestamp\fP &t) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBblock_timestamp\fP &t) const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBblock_timestamp\fP \fBmaximum\fP ()"
.br
.ti -1c
.RI "static \fBblock_timestamp\fP \fBmin\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "uint32_t \fBslot\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<uint16_t IntervalMs, uint64_t EpochMs>
.br
class aacio::chain::block_timestamp< IntervalMs, EpochMs >"
This class is used in the block headers to represent the block time It is a parameterised class that takes an Epoch in milliseconds and and an interval in milliseconds and computes the number of slots\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
