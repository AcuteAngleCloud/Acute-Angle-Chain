.TH "websocketpp::message_buffer::alloc::con_msg_manager< message >" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
websocketpp::message_buffer::alloc::con_msg_manager< message >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <alloc\&.hpp>\fP
.PP
Inherits enable_shared_from_this< con_msg_manager< message > >\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBcon_msg_manager\fP< \fBmessage\fP > \fBtype\fP"
.br
.ti -1c
.RI "typedef lib::shared_ptr< \fBcon_msg_manager\fP > \fBptr\fP"
.br
.ti -1c
.RI "typedef lib::weak_ptr< \fBcon_msg_manager\fP > \fBweak_ptr\fP"
.br
.ti -1c
.RI "typedef message::ptr \fBmessage_ptr\fP"
.br
.ti -1c
.RI "typedef lib::shared_ptr< \fBcon_msg_manager\fP > \fBptr\fP"
.br
.ti -1c
.RI "typedef lib::weak_ptr< \fBcon_msg_manager\fP > \fBweak_ptr\fP"
.br
.ti -1c
.RI "typedef message::ptr \fBmessage_ptr\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "message_ptr \fBget_message\fP ()"
.br
.RI "Get an empty message buffer\&. "
.ti -1c
.RI "message_ptr \fBget_message\fP (frame::opcode::value op, size_t size)"
.br
.RI "Get a message buffer with specified size and opcode\&. "
.ti -1c
.RI "bool \fBrecycle\fP (\fBmessage\fP *)"
.br
.RI "Recycle a message\&. "
.ti -1c
.RI "message_ptr \fBget_message\fP (size_t size) const"
.br
.RI "Get a message buffer with specified size\&. "
.ti -1c
.RI "bool \fBrecycle\fP (\fBmessage\fP *msg)"
.br
.RI "Recycle a message\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename message>
.br
class websocketpp::message_buffer::alloc::con_msg_manager< message >"
\fBA\fP connection message manager that allocates a new message for each request\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename message > message_ptr \fBwebsocketpp::message_buffer::alloc::con_msg_manager\fP< \fBmessage\fP >::get_message ()\fC [inline]\fP"

.PP
Get an empty message buffer\&. 
.PP
\fBReturns:\fP
.RS 4
\fBA\fP shared pointer to an empty new message 
.RE
.PP

.SS "template<typename message > message_ptr \fBwebsocketpp::message_buffer::alloc::con_msg_manager\fP< \fBmessage\fP >::get_message (frame::opcode::value op, size_t size)\fC [inline]\fP"

.PP
Get a message buffer with specified size and opcode\&. 
.PP
\fBParameters:\fP
.RS 4
\fIop\fP The opcode to use 
.br
\fIsize\fP Minimum size in bytes to request for the message payload\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP shared pointer to a new message with specified size\&. 
.RE
.PP

.SS "template<typename message > message_ptr \fBwebsocketpp::message_buffer::alloc::con_msg_manager\fP< \fBmessage\fP >::get_message (size_t size) const\fC [inline]\fP"

.PP
Get a message buffer with specified size\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP Minimum size in bytes to request for the message payload\&.
.RE
.PP
\fBReturns:\fP
.RS 4
\fBA\fP shared pointer to a new message with specified size\&. 
.RE
.PP

.SS "template<typename message > bool \fBwebsocketpp::message_buffer::alloc::con_msg_manager\fP< \fBmessage\fP >::recycle (\fBmessage\fP *)\fC [inline]\fP"

.PP
Recycle a message\&. This method shouldn't be called\&. If it is, return false to indicate an error\&. The rest of the method recycle chain should notice this and free the memory\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP The message to be recycled\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the message was successfully recycled, false otherwse\&. 
.RE
.PP

.SS "template<typename message > bool \fBwebsocketpp::message_buffer::alloc::con_msg_manager\fP< \fBmessage\fP >::recycle (\fBmessage\fP * msg)\fC [inline]\fP"

.PP
Recycle a message\&. This method shouldn't be called\&. If it is, return false to indicate an error\&. The rest of the method recycle chain should notice this and free the memory\&.
.PP
\fBParameters:\fP
.RS 4
\fImsg\fP The message to be recycled\&.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the message was successfully recycled, false otherwse\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
