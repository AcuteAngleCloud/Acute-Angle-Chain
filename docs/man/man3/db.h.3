.TH "contracts/aaciolib/db.h" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
contracts/aaciolib/db.h \- Defines \fBC\fP API for interfacing with blockchain database\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <aaciolib/types\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int32_t \fBdb_store_i64\fP (account_name scope, table_name table, account_name payer, uint64_t id, const void *data, uint32_t len)"
.br
.ti -1c
.RI "void \fBdb_update_i64\fP (int32_t iterator, account_name payer, const void *data, uint32_t len)"
.br
.ti -1c
.RI "void \fBdb_remove_i64\fP (int32_t iterator)"
.br
.ti -1c
.RI "int32_t \fBdb_get_i64\fP (int32_t iterator, const void *data, uint32_t len)"
.br
.ti -1c
.RI "int32_t \fBdb_next_i64\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_previous_i64\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_find_i64\fP (account_name code, account_name scope, table_name table, uint64_t id)"
.br
.ti -1c
.RI "int32_t \fBdb_lowerbound_i64\fP (account_name code, account_name scope, table_name table, uint64_t id)"
.br
.ti -1c
.RI "int32_t \fBdb_upperbound_i64\fP (account_name code, account_name scope, table_name table, uint64_t id)"
.br
.ti -1c
.RI "int32_t \fBdb_end_i64\fP (account_name code, account_name scope, table_name table)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_store\fP (account_name scope, table_name table, account_name payer, uint64_t id, const uint64_t *secondary)"
.br
.ti -1c
.RI "void \fBdb_idx64_update\fP (int32_t iterator, account_name payer, const uint64_t *secondary)"
.br
.ti -1c
.RI "void \fBdb_idx64_remove\fP (int32_t iterator)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_next\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_previous\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_find_primary\fP (account_name code, account_name scope, table_name table, uint64_t *secondary, uint64_t primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_find_secondary\fP (account_name code, account_name scope, table_name table, const uint64_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_lowerbound\fP (account_name code, account_name scope, table_name table, uint64_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_upperbound\fP (account_name code, account_name scope, table_name table, uint64_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx64_end\fP (account_name code, account_name scope, table_name table)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_store\fP (account_name scope, table_name table, account_name payer, uint64_t id, const uint128_t *secondary)"
.br
.ti -1c
.RI "void \fBdb_idx128_update\fP (int32_t iterator, account_name payer, const uint128_t *secondary)"
.br
.ti -1c
.RI "void \fBdb_idx128_remove\fP (int32_t iterator)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_next\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_previous\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_find_primary\fP (account_name code, account_name scope, table_name table, uint128_t *secondary, uint64_t primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_find_secondary\fP (account_name code, account_name scope, table_name table, const uint128_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_lowerbound\fP (account_name code, account_name scope, table_name table, uint128_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_upperbound\fP (account_name code, account_name scope, table_name table, uint128_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx128_end\fP (account_name code, account_name scope, table_name table)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_store\fP (account_name scope, table_name table, account_name payer, uint64_t id, const void *data, uint32_t data_len)"
.br
.ti -1c
.RI "void \fBdb_idx256_update\fP (int32_t iterator, account_name payer, const void *data, uint32_t data_len)"
.br
.ti -1c
.RI "void \fBdb_idx256_remove\fP (int32_t iterator)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_next\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_previous\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_find_primary\fP (account_name code, account_name scope, table_name table, void *data, uint32_t data_len, uint64_t primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_find_secondary\fP (account_name code, account_name scope, table_name table, const void *data, uint32_t data_len, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_lowerbound\fP (account_name code, account_name scope, table_name table, void *data, uint32_t data_len, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_upperbound\fP (account_name code, account_name scope, table_name table, void *data, uint32_t data_len, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx256_end\fP (account_name code, account_name scope, table_name table)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_store\fP (account_name scope, table_name table, account_name payer, uint64_t id, const uint64_t *secondary)"
.br
.ti -1c
.RI "void \fBdb_idx_double_update\fP (int32_t iterator, account_name payer, const uint64_t *secondary)"
.br
.ti -1c
.RI "void \fBdb_idx_double_remove\fP (int32_t iterator)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_next\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_previous\fP (int32_t iterator, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_find_primary\fP (account_name code, account_name scope, table_name table, uint64_t *secondary, uint64_t primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_find_secondary\fP (account_name code, account_name scope, table_name table, const uint64_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_lowerbound\fP (account_name code, account_name scope, table_name table, uint64_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_upperbound\fP (account_name code, account_name scope, table_name table, uint64_t *secondary, uint64_t *primary)"
.br
.ti -1c
.RI "int32_t \fBdb_idx_double_end\fP (account_name code, account_name scope, table_name table)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Defines \fBC\fP API for interfacing with blockchain database\&. 


.PP
\fBCopyright:\fP
.RS 4
defined in AcuteAngleChain/LICENSE\&.txt 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
