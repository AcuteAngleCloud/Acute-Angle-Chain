.TH "MinAlignedAllocator< T >" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MinAlignedAllocator< T >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBT\fP \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef \fBT\fP * \fBpointer\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMinAlignedAllocator\fP (\fBAllocController\fP &R)"
.br
.ti -1c
.RI "\fBMinAlignedAllocator\fP (\fBMinAlignedAllocator\fP const &\fBother\fP)"
.br
.ti -1c
.RI "\fBMinAlignedAllocator\fP (\fBMinAlignedAllocator\fP &&\fBother\fP)"
.br
.ti -1c
.RI "template<class U > \fBMinAlignedAllocator\fP (\fBMinAlignedAllocator\fP< \fBU\fP > const &\fBother\fP) TEST_NOEXCEPT"
.br
.ti -1c
.RI "template<class U > \fBMinAlignedAllocator\fP (\fBMinAlignedAllocator\fP< \fBU\fP > &&\fBother\fP) TEST_NOEXCEPT"
.br
.ti -1c
.RI "\fBT\fP * \fBallocate\fP (std::size_t n)"
.br
.ti -1c
.RI "void \fBdeallocate\fP (\fBT\fP *p, std::size_t n)"
.br
.ti -1c
.RI "template<class U , class \&.\&.\&. Args> void \fBconstruct\fP (\fBU\fP *p, Args &&\&.\&.\&. args)"
.br
.ti -1c
.RI "template<class U > void \fBdestroy\fP (\fBU\fP *p)"
.br
.ti -1c
.RI "\fBAllocController\fP & \fBgetController\fP () const"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "template<class Tp > class \fBMinAlignedAllocator\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
