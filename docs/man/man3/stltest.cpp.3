.TH "contracts/stltest/stltest.cpp" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
contracts/stltest/stltest.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <alloca\&.h>\fP
.br
\fC#include <assert\&.h>\fP
.br
\fC#include <byteswap\&.h>\fP
.br
\fC#include <crypt\&.h>\fP
.br
\fC#include <ctype\&.h>\fP
.br
\fC#include <endian\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <features\&.h>\fP
.br
\fC#include <inttypes\&.h>\fP
.br
\fC#include <iso646\&.h>\fP
.br
\fC#include <limits\&.h>\fP
.br
\fC#include <locale\&.h>\fP
.br
\fC#include <malloc\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <memory\&.h>\fP
.br
\fC#include <monetary\&.h>\fP
.br
\fC#include <search\&.h>\fP
.br
\fC#include <stdalign\&.h>\fP
.br
\fC#include <stdarg\&.h>\fP
.br
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdc\-predef\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdnoreturn\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <strings\&.h>\fP
.br
\fC#include <uchar\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <values\&.h>\fP
.br
\fC#include <wchar\&.h>\fP
.br
\fC#include <wctype\&.h>\fP
.br
\fC#include <algorithm>\fP
.br
\fC#include <any>\fP
.br
\fC#include <array>\fP
.br
\fC#include <bitset>\fP
.br
\fC#include <cassert>\fP
.br
\fC#include <cctype>\fP
.br
\fC#include <cerrno>\fP
.br
\fC#include <cfloat>\fP
.br
\fC#include <cinttypes>\fP
.br
\fC#include <ciso646>\fP
.br
\fC#include <climits>\fP
.br
\fC#include <clocale>\fP
.br
\fC#include <cmath>\fP
.br
\fC#include <codecvt>\fP
.br
\fC#include <condition_variable>\fP
.br
\fC#include <cstdarg>\fP
.br
\fC#include <cstdbool>\fP
.br
\fC#include <cstddef>\fP
.br
\fC#include <cstdint>\fP
.br
\fC#include <cstdio>\fP
.br
\fC#include <cstdlib>\fP
.br
\fC#include <cstring>\fP
.br
\fC#include <ctime>\fP
.br
\fC#include <cwchar>\fP
.br
\fC#include <cwctype>\fP
.br
\fC#include <deque>\fP
.br
\fC#include <exception>\fP
.br
\fC#include <forward_list>\fP
.br
\fC#include <functional>\fP
.br
\fC#include <initializer_list>\fP
.br
\fC#include <iomanip>\fP
.br
\fC#include <ios>\fP
.br
\fC#include <iosfwd>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <istream>\fP
.br
\fC#include <iterator>\fP
.br
\fC#include <limits>\fP
.br
\fC#include <list>\fP
.br
\fC#include <locale>\fP
.br
\fC#include <map>\fP
.br
\fC#include <memory>\fP
.br
\fC#include <mutex>\fP
.br
\fC#include <new>\fP
.br
\fC#include <numeric>\fP
.br
\fC#include <optional>\fP
.br
\fC#include <ostream>\fP
.br
\fC#include <queue>\fP
.br
\fC#include <ratio>\fP
.br
\fC#include <regex>\fP
.br
\fC#include <scoped_allocator>\fP
.br
\fC#include <set>\fP
.br
\fC#include <sstream>\fP
.br
\fC#include <stack>\fP
.br
\fC#include <stdexcept>\fP
.br
\fC#include <streambuf>\fP
.br
\fC#include <string>\fP
.br
\fC#include <string_view>\fP
.br
\fC#include <strstream>\fP
.br
\fC#include <system_error>\fP
.br
\fC#include <tuple>\fP
.br
\fC#include <type_traits>\fP
.br
\fC#include <typeindex>\fP
.br
\fC#include <typeinfo>\fP
.br
\fC#include <unordered_map>\fP
.br
\fC#include <unordered_set>\fP
.br
\fC#include <utility>\fP
.br
\fC#include <valarray>\fP
.br
\fC#include <variant>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <aaciolib/token\&.hpp>\fP
.br
\fC#include <aaciolib/dispatcher\&.hpp>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBstltest::MSTR\fP"
.br
.ti -1c
.RI "class \fBstltest::contract\fP"
.br
.ti -1c
.RI "struct \fBstltest::contract::message\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBapply\fP (uint64_t receiver, uint64_t code, uint64_t \fBaction\fP)"
.br
.RI "namespace aacio "
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBCopyright:\fP
.RS 4
defined in AcuteAngleChain/LICENSE\&.txt 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void apply (uint64_t receiver, uint64_t code, uint64_t action)"

.PP
namespace aacio The apply method implements the dispatch of events to this contract 
.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
