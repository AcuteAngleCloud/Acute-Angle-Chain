.TH "aacio::chain::webassembly::wavm::intrinsic_invoker_impl< Ret, std::tuple< array_ptr< T >, array_ptr< U >, size_t, Inputs... >, std::tuple< Translated... > >" 3 "Sun Jun 3 2018" "AcuteAngleChain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
aacio::chain::webassembly::wavm::intrinsic_invoker_impl< Ret, std::tuple< array_ptr< T >, array_ptr< U >, size_t, Inputs... >, std::tuple< Translated... > >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <wavm\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBnext_step\fP = \fBintrinsic_invoker_impl\fP< Ret, std::tuple< Inputs\&.\&.\&. >, std::tuple< Translated\&.\&.\&., I32, I32, I32 > >"
.br
.ti -1c
.RI "using \fBthen_type\fP = Ret(*)(\fBrunning_instance_context\fP &, \fBarray_ptr\fP< \fBT\fP >, \fBarray_ptr\fP< \fBU\fP >, size_t, Inputs\&.\&.\&., Translated\&.\&.\&.)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<then_type Then> static Ret \fBtranslate_one\fP (\fBrunning_instance_context\fP &ctx, Inputs\&.\&.\&. rest, Translated\&.\&.\&. translated, I32 ptr_t, I32 ptr_u, I32 size)"
.br
.ti -1c
.RI "template<then_type Then> static const auto \fBfn\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T, typename U, typename Ret, typename\&.\&.\&. Inputs, typename \&.\&.\&. Translated>
.br
struct aacio::chain::webassembly::wavm::intrinsic_invoker_impl< Ret, std::tuple< array_ptr< T >, array_ptr< U >, size_t, Inputs\&.\&.\&. >, std::tuple< Translated\&.\&.\&. > >"
Specialization for transcribing a pair of \fBarray_ptr\fP types in the native method signature that share size This type transcribes into 3 wasm parameters: 2 pointers and byte length and checks the validity of those memory ranges before dispatching to the native method
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIRet\fP - the return type of the native method 
.br
\fIInputs\fP - the remaining native parameters to transcribe 
.br
\fITranslated\fP - the list of transcribed wasm parameters 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for AcuteAngleChain from the source code\&.
