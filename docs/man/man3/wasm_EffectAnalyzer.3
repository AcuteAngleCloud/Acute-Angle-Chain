.TH "wasm::EffectAnalyzer" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
wasm::EffectAnalyzer
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBwasm::PostWalker< EffectAnalyzer >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEffectAnalyzer\fP (\fBPassOptions\fP &passOptions, \fBExpression\fP *ast=nullptr)"
.br
.ti -1c
.RI "void \fBanalyze\fP (\fBExpression\fP *ast)"
.br
.ti -1c
.RI "bool \fBaccessesLocal\fP ()"
.br
.ti -1c
.RI "bool \fBaccessesGlobal\fP ()"
.br
.ti -1c
.RI "bool \fBaccessesMemory\fP ()"
.br
.ti -1c
.RI "bool \fBhasSideEffects\fP ()"
.br
.ti -1c
.RI "bool \fBhasAnything\fP ()"
.br
.ti -1c
.RI "bool \fBinvalidates\fP (\fBEffectAnalyzer\fP &\fBother\fP)"
.br
.ti -1c
.RI "void \fBmergeIn\fP (\fBEffectAnalyzer\fP &\fBother\fP)"
.br
.ti -1c
.RI "bool \fBcheckPre\fP (\fBExpression\fP *curr)"
.br
.ti -1c
.RI "bool \fBcheckPost\fP (\fBExpression\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitBreak\fP (\fBBreak\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitSwitch\fP (\fBSwitch\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitBlock\fP (\fBBlock\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitLoop\fP (\fBLoop\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitCall\fP (\fBCall\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitCallImport\fP (\fBCallImport\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitCallIndirect\fP (\fBCallIndirect\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitGetLocal\fP (\fBGetLocal\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitSetLocal\fP (\fBSetLocal\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitGetGlobal\fP (\fBGetGlobal\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitSetGlobal\fP (\fBSetGlobal\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitLoad\fP (\fBLoad\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitStore\fP (\fBStore\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitUnary\fP (\fBUnary\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitBinary\fP (\fBBinary\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitReturn\fP (\fBReturn\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitHost\fP (\fBHost\fP *curr)"
.br
.ti -1c
.RI "void \fBvisitUnreachable\fP (\fBUnreachable\fP *curr)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBignoreImplicitTraps\fP"
.br
.ti -1c
.RI "bool \fBdebugInfo\fP"
.br
.ti -1c
.RI "bool \fBbranches\fP = false"
.br
.ti -1c
.RI "bool \fBcalls\fP = false"
.br
.ti -1c
.RI "\fBstd::set\fP< Index > \fBlocalsRead\fP"
.br
.ti -1c
.RI "\fBstd::set\fP< Index > \fBlocalsWritten\fP"
.br
.ti -1c
.RI "\fBstd::set\fP< \fBName\fP > \fBglobalsRead\fP"
.br
.ti -1c
.RI "\fBstd::set\fP< \fBName\fP > \fBglobalsWritten\fP"
.br
.ti -1c
.RI "bool \fBreadsMemory\fP = false"
.br
.ti -1c
.RI "bool \fBwritesMemory\fP = false"
.br
.ti -1c
.RI "bool \fBimplicitTrap\fP = false"
.br
.ti -1c
.RI "\fBstd::set\fP< \fBName\fP > \fBbreakNames\fP"
.br
.in -1c
.SS "Additional Inherited Members"


.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
