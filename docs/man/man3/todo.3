.TH "todo" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
todo \- Todo List 

.IP "\fBMember \fBfc::path::windows_string\fP () const\fP" 1c
use iterators instead of indexes for faster performance  
.IP "\fBMember \fBwebsocketpp::connection< config >::handle_write_frame\fP (lib::error_code const &ec)\fP" 1c
unit tests 
.IP "\fBMember \fBwebsocketpp::connection< config >::send\fP (message_ptr msg)\fP" 1c
make exception system_error rather than error_code 
.IP "\fBMember \fBwebsocketpp::connection< config >::write_frame\fP ()\fP" 1c
unit tests 
.IP "\fBMember \fBwebsocketpp::extensions::permessage_deflate::enabled< config >::compress\fP (std::string const &in, std::string &out)\fP" 1c
: avail_in/out is 32 bit, need to fix for cases of >32 bit frames on 64 bit machines\&. 
.IP "\fBMember \fBwebsocketpp::extensions::permessage_deflate::enabled< config >::enable_client_no_context_takeover\fP ()\fP" 1c
Document to what extent memory usage will be reduced 
.IP "\fBMember \fBwebsocketpp::extensions::permessage_deflate::enabled< config >::enable_server_no_context_takeover\fP ()\fP" 1c
Document to what extent memory usage will be reduced 
.IP "\fBMember \fBwebsocketpp::extensions::permessage_deflate::enabled< config >::init\fP (bool is_server)\fP" 1c
memory level, strategy, etc are hardcoded 
.IP "\fBMember \fBwebsocketpp::http::parser::parser::append_header\fP (std::string const &key, std::string const &val)\fP" 1c
Make this method case insensitive\&. 
.PP
Should there be any restrictions on which keys are allowed? 
.PP
Exception free varient 
.IP "\fBMember \fBwebsocketpp::http::parser::parser::get_header\fP (std::string const &key) const\fP" 1c
Make this method case insensitive\&. 
.IP "\fBMember \fBwebsocketpp::http::parser::parser::process_header\fP (std::string::iterator begin, std::string::iterator end)\fP" 1c
Update this method to be exception free\&. 
.IP "\fBMember \fBwebsocketpp::http::parser::parser::remove_header\fP (std::string const &key)\fP" 1c
Make this method case insensitive\&. 
.IP "\fBMember \fBwebsocketpp::http::parser::parser::replace_header\fP (std::string const &key, std::string const &val)\fP" 1c
Make this method case insensitive\&. 
.PP
Should there be any restrictions on which keys are allowed? 
.PP
Exception free varient 
.IP "\fBMember \fBwebsocketpp::http::parser::parser::set_version\fP (std::string const &version)\fP" 1c
Does this method need any validation? 
.IP "\fBMember \fBwebsocketpp::processor::hybi00< config >::get_key3\fP () const\fP" 1c
This doesn't appear to be used anymore\&. It might be able to be removed  
.IP "\fBMember \fBwebsocketpp::processor::hybi13< config >::validate_incoming_extended_header\fP (\fBframe::basic_header\fP h, \fBframe::extended_header\fP e) const\fP" 1c
unit test for the >32 bit frames on 32 bit systems case 
.IP "\fBMember \fBwebsocketpp::utility::ci_find_substr\fP (\fBT\fP const &haystack, typename T::value_type const *needle, typename T::size_type size, std::locale const &loc=std::locale())\fP" 1c
Is this still used? This method may not make sense\&.\&. should use iterators or be less generic\&. As is it is too tightly coupled to std::string
.PP

