.TH "test_buf< CharT >" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
test_buf< CharT >
.SH SYNOPSIS
.br
.PP
.PP
Inherits wbuffer_convert< std::codecvt_utf8< wchar_t > >, wbuffer_convert< std::codecvt_utf8< wchar_t > >, wbuffer_convert< std::codecvt_utf8< wchar_t > >, basic_filebuf< CharT >, basic_filebuf< CharT >, and basic_filebuf< CharT >\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::basic_filebuf< CharT > \fBbase\fP"
.br
.ti -1c
.RI "typedef base::char_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef base::int_type \fBint_type\fP"
.br
.ti -1c
.RI "typedef base::traits_type \fBtraits_type\fP"
.br
.ti -1c
.RI "typedef std::basic_filebuf< CharT > \fBbase\fP"
.br
.ti -1c
.RI "typedef base::char_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef base::int_type \fBint_type\fP"
.br
.ti -1c
.RI "typedef base::traits_type \fBtraits_type\fP"
.br
.ti -1c
.RI "typedef std::basic_filebuf< CharT > \fBbase\fP"
.br
.ti -1c
.RI "typedef base::char_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef base::int_type \fBint_type\fP"
.br
.ti -1c
.RI "typedef std::wbuffer_convert< std::codecvt_utf8< wchar_t > > \fBbase\fP"
.br
.ti -1c
.RI "typedef base::char_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef base::int_type \fBint_type\fP"
.br
.ti -1c
.RI "typedef base::traits_type \fBtraits_type\fP"
.br
.ti -1c
.RI "typedef std::wbuffer_convert< std::codecvt_utf8< wchar_t > > \fBbase\fP"
.br
.ti -1c
.RI "typedef base::char_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef base::int_type \fBint_type\fP"
.br
.ti -1c
.RI "typedef base::traits_type \fBtraits_type\fP"
.br
.ti -1c
.RI "typedef std::wbuffer_convert< std::codecvt_utf8< wchar_t > > \fBbase\fP"
.br
.ti -1c
.RI "typedef base::char_type \fBchar_type\fP"
.br
.ti -1c
.RI "typedef base::int_type \fBint_type\fP"
.br
.ti -1c
.RI "typedef base::traits_type \fBtraits_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "char_type * \fBpbase\fP () const"
.br
.ti -1c
.RI "char_type * \fBpptr\fP () const"
.br
.ti -1c
.RI "char_type * \fBepptr\fP () const"
.br
.ti -1c
.RI "void \fBgbump\fP (int n)"
.br
.ti -1c
.RI "virtual int_type \fBoverflow\fP (int_type c=traits_type::eof())"
.br
.ti -1c
.RI "char_type * \fBeback\fP () const"
.br
.ti -1c
.RI "char_type * \fBgptr\fP () const"
.br
.ti -1c
.RI "char_type * \fBegptr\fP () const"
.br
.ti -1c
.RI "void \fBgbump\fP (int n)"
.br
.ti -1c
.RI "virtual int_type \fBpbackfail\fP (int_type c=traits_type::eof())"
.br
.ti -1c
.RI "char_type * \fBeback\fP () const"
.br
.ti -1c
.RI "char_type * \fBgptr\fP () const"
.br
.ti -1c
.RI "char_type * \fBegptr\fP () const"
.br
.ti -1c
.RI "void \fBgbump\fP (int n)"
.br
.ti -1c
.RI "virtual int_type \fBunderflow\fP ()"
.br
.ti -1c
.RI "\fBtest_buf\fP (std::streambuf *sb)"
.br
.ti -1c
.RI "char_type * \fBpbase\fP () const"
.br
.ti -1c
.RI "char_type * \fBpptr\fP () const"
.br
.ti -1c
.RI "char_type * \fBepptr\fP () const"
.br
.ti -1c
.RI "void \fBgbump\fP (int n)"
.br
.ti -1c
.RI "virtual int_type \fBoverflow\fP (int_type c=traits_type::eof())"
.br
.ti -1c
.RI "\fBtest_buf\fP (std::streambuf *sb)"
.br
.ti -1c
.RI "char_type * \fBeback\fP () const"
.br
.ti -1c
.RI "char_type * \fBgptr\fP () const"
.br
.ti -1c
.RI "char_type * \fBegptr\fP () const"
.br
.ti -1c
.RI "void \fBgbump\fP (int n)"
.br
.ti -1c
.RI "virtual int_type \fBpbackfail\fP (int_type c=traits_type::eof())"
.br
.ti -1c
.RI "\fBtest_buf\fP (std::streambuf *sb)"
.br
.ti -1c
.RI "char_type * \fBeback\fP () const"
.br
.ti -1c
.RI "char_type * \fBgptr\fP () const"
.br
.ti -1c
.RI "char_type * \fBegptr\fP () const"
.br
.ti -1c
.RI "void \fBgbump\fP (int n)"
.br
.ti -1c
.RI "virtual int_type \fBunderflow\fP ()"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
