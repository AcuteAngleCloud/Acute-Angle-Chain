.TH "chainbase::generic_index< MultiIndexType >" 3 "Sun Jun 3 2018" "Acute-Angle-Chain" \" -*- nroff -*-
.ad l
.nh
.SH NAME
chainbase::generic_index< MultiIndexType >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <chainbase\&.hpp>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBsession\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef bip::managed_mapped_file::segment_manager \fBsegment_manager_type\fP"
.br
.ti -1c
.RI "typedef MultiIndexType \fBindex_type\fP"
.br
.ti -1c
.RI "typedef index_type::value_type \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef bip::allocator< \fBgeneric_index\fP, segment_manager_type > \fBallocator_type\fP"
.br
.ti -1c
.RI "typedef \fBundo_state\fP< value_type > \fBundo_state_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBgeneric_index\fP (allocator< value_type > a)"
.br
.ti -1c
.RI "void \fBvalidate\fP () const"
.br
.ti -1c
.RI "template<typename Constructor > const value_type & \fBemplace\fP (Constructor &&c)"
.br
.ti -1c
.RI "template<typename Modifier > void \fBmodify\fP (const value_type &obj, Modifier &&m)"
.br
.ti -1c
.RI "void \fBremove\fP (const value_type &obj)"
.br
.ti -1c
.RI "template<typename CompatibleKey > const value_type * \fBfind\fP (CompatibleKey &&key) const"
.br
.ti -1c
.RI "template<typename CompatibleKey > const value_type & \fBget\fP (CompatibleKey &&key) const"
.br
.ti -1c
.RI "const index_type & \fBindices\fP () const"
.br
.ti -1c
.RI "\fBsession\fP \fBstart_undo_session\fP (bool enabled)"
.br
.ti -1c
.RI "const index_type & \fBindicies\fP () const"
.br
.ti -1c
.RI "int64_t \fBrevision\fP () const"
.br
.ti -1c
.RI "void \fBundo\fP ()"
.br
.ti -1c
.RI "void \fBsquash\fP ()"
.br
.ti -1c
.RI "void \fBcommit\fP (int64_t revision)"
.br
.ti -1c
.RI "void \fBundo_all\fP ()"
.br
.ti -1c
.RI "void \fBset_revision\fP (uint64_t revision)"
.br
.ti -1c
.RI "void \fBremove_object\fP (int64_t id)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MultiIndexType>
.br
class chainbase::generic_index< MultiIndexType >"
The value_type stored in the multiindex container must have a integer field with the name 'id'\&. This will be the primary key and it will be assigned and managed by \fBgeneric_index\fP\&.
.PP
Additionally, the constructor for value_type must take an allocator 
.SH "Member Function Documentation"
.PP 
.SS "template<typename MultiIndexType > void \fBchainbase::generic_index\fP< MultiIndexType >::commit (int64_t revision)\fC [inline]\fP"
Discards all undo history prior to revision 
.SS "template<typename MultiIndexType > template<typename Constructor > const value_type& \fBchainbase::generic_index\fP< MultiIndexType >::emplace (Constructor && c)\fC [inline]\fP"
Construct a new element in the multi_index_container\&. Set the ID to the next available ID, then increment _next_id and fire off on_create()\&. 
.SS "template<typename MultiIndexType > void \fBchainbase::generic_index\fP< MultiIndexType >::squash ()\fC [inline]\fP"
This method works similar to git squash, it merges the change set from the two most recent revision numbers into one revision number (reducing the head revision number)
.PP
This method does not change the state of the index, only the state of the undo buffer\&. 
.SS "template<typename MultiIndexType > void \fBchainbase::generic_index\fP< MultiIndexType >::undo ()\fC [inline]\fP"
Restores the state to how it was prior to the current session discarding all changes made between the last revision and the current revision\&. 
.SS "template<typename MultiIndexType > void \fBchainbase::generic_index\fP< MultiIndexType >::undo_all ()\fC [inline]\fP"
Unwinds all undo states 

.SH "Author"
.PP 
Generated automatically by Doxygen for Acute-Angle-Chain from the source code\&.
